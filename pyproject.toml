[project]
name = "director5"
version = "0.1.0"
description = "A next generation website hosting platform"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
  "celery>=5.4.0",
  "django-browser-reload>=1.15.0",
  "django>=5.1",
  "fastapi[standard]>=0.115.0",
  "heroicons[django]>=2.8.0",
  "psycopg[binary]>3.1.8",
  "pydantic>=2.9.2",
  "requests>=2.32.3",
  "social-auth-app-django>=5.4.2",
  "typing-extensions>=4.12",
  "django-debug-toolbar>=4.4.6",
  "django-linear-migrations>=2.16.0",
  "pillow>=11.0.0",
  "docker>=7.1.0",
  "jinja2>=3.1.4",
  "redis>=5.2.1",
  "django-htmx>=1.21.0",
  "channels[daphne]>=4.2.0",
]

[dependency-groups]
lint = [
  "django-stubs>=5.1.0",
  "mypy>=1.11.2",
  "pre-commit>=3.8.0",
  "types-requests>=2.32.0.20241016",
]
test = [
  "httpx>=0.27.2",
  "pytest-django>=4.9.0",
  "pytest-xdist>=3.6.1",
  "pytest>=8.3.3",
]
docs = [
  "furo>=2024.8.6",
  "myst-parser[linkify]>=4.0.0",
  "rust-just>=1.37.0",
  "sphinx-autobuild>=2024.10.3",
  "sphinx-copybutton>=0.5.2",
  "sphinx>=8.1.0",
  "sphinxcontrib-django>=2.5",
  "sphinx-design>=0.6.1",
]
dev = [
  "colorama>=0.4.6 ; sys_platform == 'win32'",
  "django-extensions>=3.2.3",
  "django-fastdev>=1.12.0",
  "watchdog>=6.0.0",
]

[tool.uv]
package = false
default-groups = ["lint", "test", "docs", "dev"]
required-version = ">=0.6.0"

[tool.uv.workspace]
members = ["manager", "orchestrator"]

[tool.ruff]
extend-exclude = [
  ".github",
  "dev",
  ".env",
  "env",
  "secret",
  "media",
  "migrations",
]

show-fixes = false
fix = true

line-length = 100

target-version = "py312"

[tool.ruff.lint]
select = [
    # flake8-bugbear
    "B",
    # flake8-blind-except
    "BLE",
    # flake8-comprehensions
    "C4",
    # mccabe code complexity
    "C90",
    # pydocstyle
    "D",
    # flake8-django
    "DJ",
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # fastapi
    "FAST",
    # flake8-boolean-trap
    "FBT",
    # isort
    "I",
    # pep8-naming
    "N",
    # Pylint
    "PL",
    # Pytest
    "PT",
    # flake8-use-pathlib
    "PTH",
    # pygrep hooks
    "PGH",
    # flake8-return
    "RET",
    # ruff
    "RUF",
    # flake8-print
    "T20",
    # pyupgrade
    "UP",
]
ignore = [
  # too many return statements
  "PLR0911",
  # magic number comparison
  "PLR2004",
  # mutable class attrs annotated as typing.ClassVar
  "RUF012",
  # missing docstring
  "D1",
  # as recommended by https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
  "E111",
  "E114",
  "E117",
  "E501",
  "D206",
  "D300",
]

[tool.ruff.lint.per-file-ignores]
"**/management/commands/*.py" = ["T20"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-third-party = ["fastapi", "django", "docker"]

[tool.ruff.lint.flake8-pytest-style]
parametrize-names-type = "tuple"
parametrize-values-type = "tuple"

[tool.ruff.format]
docstring-code-format = true
line-ending = "lf"

[tool.codespell]
write-changes = true
